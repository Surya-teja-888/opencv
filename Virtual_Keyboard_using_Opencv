import cv2
from cvzone.HandTrackingModule import HandDetector
from time import sleep

cap = cv2.VideoCapture(0)
cap.set(3,1280)
cap.set(4,720)

detector = HandDetector(detectionCon=0.8)
keys = [["Q","W","E","R","T","Y","U","I","O","P"],
        ["A","S","D","F","G","H","J","K","L",";"],
        ["Z","X","C","V","B","N","M",",",".","/"]]
finalText = ""

def drawall(image,buttonlist):

    for button in buttonlist:
        x, y = button.pos
        w, h = button.size
        cv2.rectangle(image, button.pos, (x + w, y + h), (255, 0, 255), cv2.FILLED)  # we need rectangle to be filled
        cv2.putText(image, button.text, (x + 25, y + 55), cv2.FONT_HERSHEY_PLAIN, 3, (255, 255, 255), 3)
    return image

class Button():

    def __init__(self,pos,text,size = [85,85]):
        self.pos = pos
        self.text = text
        self.size = size


buttonlist = []
for i in range(len(keys)):
    for j, key in enumerate(keys[i]):
        buttonlist.append(Button([100 * j + 50, 100 * i], key))


while True:

    _,image = cap.read()
    image = cv2.flip(image,1)
    hands, image = detector.findHands(image,flipType=False)

    image = drawall(image,buttonlist)

    if hands:
        lmList = hands[0]["lmList"]
        for button in buttonlist:
            x,y = button.pos
            w,h = button.size

            if x < lmList[8][0] < x + w and y < lmList[8][1] < y + h:
                cv2.rectangle(image, button.pos, (x + w, y + h), (175, 0, 175),cv2.FILLED)  # if our index goes near to it it turns into deep purple
                #cv2.putText(image, button.text, (x + 25, y + 55), cv2.FONT_HERSHEY_PLAIN, 3, (255, 255, 255), 3)

                '''
                   Typing the Text
                '''
                length,_,_ = detector.findDistance(lmList[8],lmList[12],image)
                if length < 35:
                    cv2.rectangle(image, button.pos, (x + w, y + h), (0, 255, 255),cv2.FILLED)  # if our index goes near to it it turns into yellow
                    #cv2.putText(image, button.text, (x + 25, y + 55), cv2.FONT_HERSHEY_PLAIN, 3, (255, 255, 255), 3)
                    finalText = finalText + button.text
                    sleep(0.15)
                    print(length)

            '''
               BackSpace
            '''
            if x < lmList[4][0] < x + w and y < lmList[4][1] < y + h:
                cv2.rectangle(image, button.pos, (x + w, y + h), (3, 252, 215),cv2.FILLED)  # if our index goes near to it it turns into blue
                #cv2.putText(image, button.text, (x + 25, y + 55), cv2.FONT_HERSHEY_PLAIN, 3, (255, 255, 255), 3)
                length1,_,_ = detector.findDistance(lmList[4],lmList[8],image)
                if length1 < 35:
                    finalText = finalText.replace(button.text,"")
                    print(length1)






    cv2.rectangle(image, (50,350), (700,450), (175, 0, 175), cv2.FILLED) #Where out text is written
    cv2.putText(image, finalText, (60,425), cv2.FONT_HERSHEY_PLAIN, 5, (255, 255, 255), 5)

    cv2.imshow("Image",image)
    cv2.waitKey(1)
